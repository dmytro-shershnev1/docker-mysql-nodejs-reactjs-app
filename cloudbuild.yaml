steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'europe-west1-docker.pkg.dev/app-project-431616/app-docker-repo/frontend-image', './frontend' ]
    id: 'Build Frontend Docker Image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west1-docker.pkg.dev/app-project-431616/app-docker-repo/frontend-image' ]
    id: 'Push Frontend Docker Image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west1-docker.pkg.dev/app-project-431616/app-docker-repo/backend-image', './backend' ]
    id: 'Build Backend Docker Image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west1-docker.pkg.dev/app-project-431616/app-docker-repo/backend-image' ]
    id: 'Push Backend Docker Image'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    id: 'Deploy to GKE cluster on Google Cloud'
    args:
      - '-c'
      - |
        set -x && \
        export KUBECONFIG="$(pwd)/gateway-kubeconfig" && \
        gcloud container fleet memberships get-credentials app-cluster && \
        kubectl --kubeconfig gateway-kubeconfig apply -f frontend.yaml

options:
  logging: CLOUD_LOGGING_ONLY
