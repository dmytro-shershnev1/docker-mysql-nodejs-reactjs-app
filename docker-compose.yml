version: "3.8"

services:
  db: # Defines the 'db' service for MySQL database
    image: mysql:8.0 # Uses the MySQL 8.0 Docker image
    environment: # Sets environment variables for the database configuration
      - MYSQL_DATABASE=appdb # Specifies the name of the database
      - MYSQL_PASSWORD=pass123 # Sets the password for the MySQL user
      - MYSQL_ROOT_PASSWORD=pass123 # Sets the root password for MySQL
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
  api: # Defines the 'api' service for the backend API
    build: # Builds the backend API using the provided Dockerfile
      dockerfile: Dockerfile.dev # Specifies the Dockerfile to use for building the backend
      context: "./server" # Specifies the build context directory for the backend
    volumes:
      - /app/node_modules
      - ./server:/app
    environment: # Sets environment variables for the database configuration
      - DB_HOST=db # Specifies the name of the database instance
      - DB_PORT=3306 # Specifies the DB port
      - DB_NAME=appdb # Specifies the name of the database
      - DB_USER=root # Specifies the root password for MySQL
      - DB_PASS=pass123 # Specifies the password for the root user
  client: # Defines the 'frontend' service for the frontend app
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build: # Builds the frontend app using the provided Dockerfile
      dockerfile: Dockerfile.dev
      context: ./client # Specifies the build context directory for the frontend
    volumes:
      - /app/node_modules
      - ./client:/app
